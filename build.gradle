buildscript {
	ext {
		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
		springCloudVersion = '1.2.3.RELEASE'
		
	}
	repositories {
	    maven { url 'https://maven-central.storage.googleapis.com' }
		mavenCentral()		
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven {
            url "https://plugins.gradle.org/m2/"
        }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

jar {
	baseName = 'rest-data'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url 'https://maven-central.storage.googleapis.com' } 
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-data-rest:$springBootVersion")
    compile("com.h2database:h2")
    compile('org.springframework.data:spring-data-rest-webmvc')
    compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.boot:spring-boot-starter-hateoas")	
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth:spring-security-oauth2')
	
	compile('org.webjars:angularjs:1.4.3')
	compile('org.webjars:jquery:2.1.1')
	compile('org.webjars:bootstrap:3.2.0')
	compile('org.webjars:webjars-locator')
	
	compile("org.springframework.cloud:spring-cloud-spring-service-connector:$springCloudVersion")
    compile("org.springframework.cloud:spring-cloud-cloudfoundry-connector:$springCloudVersion")
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile("org.springframework.boot:spring-boot-legacy:+")
	
	compile('org.projectlombok:lombok:1.16.8')
	compile('ch.qos.logback:logback-classic:1.1.7')	
	compile('com.google.guava:guava:19.0')	
    compile('org.json:json:20160212')
		
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('junit:junit')
}

task buildDocker(type: Docker, dependsOn: build) {
  push = true
  applicationName = jar.baseName
  dockerfile = file('Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}